plugins {
    id 'java'
    id 'scala'
    id 'org.jetbrains.kotlin.jvm' version '1.4.21'
}

repositories {
    mavenLocal()
    mavenCentral()
    jcenter()
    maven { url "https://jitpack.io" }
}

defaultTasks "tinkerGraphApp"

dependencies {
    // Plume library
    implementation('io.github.plume-oss:plume:0.5.0') {
        // Temporary fix until this is addressed.
        // This is simply a thin Scala layer to allow communication with SCPG's API and is packaged in the core JAR.
        exclude group: 'io.github.plume-oss', module: 'cpgconv'
    }
    compile "org.apache.logging.log4j:log4j-api:2.13.3"
    compile "org.apache.logging.log4j:log4j-core:2.13.3"
    compile "org.apache.logging.log4j:log4j-slf4j-impl:2.13.3"
}

ext {
    tinkerGraphMainClass = "com.example.TinkerGraphApp"
    overflowDbMainClass = "com.example.OverflowDbApp"
    janusGraphMainClass = "com.example.JanusGraphApp"
    tigerGraphMainClass = "com.example.TigerGraphApp"
    neptuneMainClass = "com.example.NeptuneApp"
    neo4jMainClass = "com.example.Neo4jApp"
}

task tinkerGraphApp(type: JavaExec) {
    group = "Execution"
    description = "Run an example app using the TinkerGraph backend."
    classpath = sourceSets.main.runtimeClasspath
    main = tinkerGraphMainClass
}

task overflowDbApp(type: JavaExec) {
    group = "Execution"
    description = "Run an example app using the OverflowDb backend."
    classpath = sourceSets.main.runtimeClasspath
    main = overflowDbMainClass
}

task janusGraphApp(type: JavaExec) {
    group = "Execution"
    description = "Run an example app using the JanusGraph backend."
    classpath = sourceSets.main.runtimeClasspath
    main = janusGraphMainClass
}

task tigerGraphApp(type: JavaExec) {
    group = "Execution"
    description = "Run an example app using the TigerGraph backend."
    classpath = sourceSets.main.runtimeClasspath
    main = tigerGraphMainClass
}

task neptuneApp(type: JavaExec) {
    group = "Execution"
    description = "Run an example app using the Amazon Neptune backend."
    classpath = sourceSets.main.runtimeClasspath
    main = neptuneMainClass
}

task neo4jApp(type: JavaExec) {
    group = "Execution"
    description = "Run an example app using the Neo4j backend."
    classpath = sourceSets.main.runtimeClasspath
    main = neo4jMainClass
}